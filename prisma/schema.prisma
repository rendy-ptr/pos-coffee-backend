// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(50)
  email         String    @unique @db.VarChar(50)
  password      String    @db.VarChar(255)
  loyaltyPoints Int       @default(0)
  is_deleted    Boolean   @default(false)
  created_at    DateTime  @default(now()) @db.Timestamp()
  updated_at    DateTime  @default(now()) @db.Timestamp()
  vouchers      Voucher[] @relation("CustomerToVoucher")
}

model Kasir {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  email      String   @unique @db.VarChar(50)
  password   String   @db.VarChar(255)
  shift      String   @db.VarChar(50)
  is_deleted Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamp()
  updated_at DateTime @default(now()) @db.Timestamp()
}

model Admin {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(50)
  email       String   @unique @db.VarChar(50)
  password    String   @db.VarChar(255)
  permissions Json
  is_deleted  Boolean  @default(false)
  created_at  DateTime @default(now()) @db.Timestamp()
  updated_at  DateTime @default(now()) @db.Timestamp()
}

model Voucher {
  id          Int       @id @default(autoincrement())
  customer_id Int
  customer    Customer  @relation("CustomerToVoucher", fields: [customer_id], references: [id])
  code        String    @unique @db.VarChar(50)
  discount    Float
  expiresAt   DateTime?
  created_at  DateTime  @default(now()) @db.Timestamp()
  is_used     Boolean   @default(false)
}
