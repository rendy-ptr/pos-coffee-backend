generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  KASIR
  ADMIN
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  role          UserRole        @default(CUSTOMER)
  isDeleted     Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  customerProfile CustomerProfile? @relation("UserToCustomerProfile")
  kasirProfile    KasirProfile?    @relation("UserToKasirProfile")
  adminProfile    AdminProfile?    @relation("UserToAdminProfile")
}

model CustomerProfile {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  user          User     @relation("UserToCustomerProfile", fields: [userId], references: [id])
  loyaltyPoints Int      @default(0)
  phoneNumber   String?  // Opsional, nomor telepon pelanggan
  profile       String?  // Opsional, Profile
  // isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model KasirProfile {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  user          User     @relation("UserToKasirProfile", fields: [userId], references: [id])
  shift         String
  // isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model AdminProfile {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  user          User     @relation("UserToAdminProfile", fields: [userId], references: [id])
  permissions   Json?    // Opsional, hak akses admin dalam format JSON
  // isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
