// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleType {
  customer
  kasir
  admin
}

model User {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(50)
  email      String    @unique @db.VarChar(50)
  password   String    @db.VarChar(255)
  role       RoleType  @default(customer)
  is_deleted Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamp()
  updated_at DateTime  @default(now()) @db.Timestamp()
  customer   Customer? @relation("UserToCustomer")
  kasir      Kasir?    @relation("UserToKasir")
  admin      Admin?    @relation("UserToAdmin")
}

model Customer {
  user_id       Int       @id
  user          User      @relation("UserToCustomer", fields: [user_id], references: [id])
  loyaltyPoints Int       @default(0)
  vouchers      Voucher[] @relation("CustomerToVoucher")
}

model Kasir {
  user_id Int    @id
  user    User   @relation("UserToKasir", fields: [user_id], references: [id])
  shift   String @db.VarChar(50)
}

model Admin {
  user_id     Int  @id
  user        User @relation("UserToAdmin", fields: [user_id], references: [id])
  permissions Json
}

model Voucher {
  id          Int       @id @default(autoincrement())
  customer_id Int
  customer    Customer  @relation("CustomerToVoucher", fields: [customer_id], references: [user_id])
  code        String    @unique @db.VarChar(50)
  discount    Float
  expiresAt   DateTime?
  created_at  DateTime  @default(now()) @db.Timestamp()
  is_used     Boolean   @default(false)
}
